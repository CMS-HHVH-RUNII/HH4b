{


  double mgg, mjj,evWeight, mtot, normWeight;
 int categories;

 evWeight = 1.0;
 normWeight = 1;

   
 string inFile("input/MassPlotFineBins.root");
 
 string outFile("dijetHH_RadionHH");
 
 int massrange=7;

 TFile file0(inFile.c_str(), "read");
 
 for (int iMass = 0; iMass<massrange; iMass++){
   
   if (iMass != 2 && iMass != 6) continue;
   
   int Mass = 1000+iMass*100;   
   
   string sOutFile = "MiniTrees/Signal_HH_13TeV/" + outFile + Form("OUT%d_miniTree.root", Mass);
   TFile* f1 = new TFile(sOutFile.c_str(), "recreate");
   
   TTree *TCVARS = new TTree("TCVARS", "hh selection");
   TCVARS->Branch("mgg",&mgg,"mgg/D");
   
   TCVARS->Branch("evWeight",&evWeight,"evWeight/D");
   TCVARS->Branch("normWeight",&normWeight,"normWeight/D");
   
   TCVARS->Branch("categories",&categories,"categories/I");
   
   

   
   
   for (int iCat = 0; iCat < 1; iCat++){
     TH1D* hMass = (TH1D*) file0.Get(Form("Radion%d_cat%d;1",Mass,iCat));
     
     
     TAxis* Axis =   hMass->GetXaxis();
     for (int i = 1 ; i < hMass->GetNbinsX()+1; i++){
       int N = abs(hMass->GetBinContent(i));
       
       if (i%10 == 0) cout << "i = " << i << "N = " << N << " binCenter = " << hMass->GetBinCenter(i) << endl;
       
       mgg = Axis->GetBinCenter(i);
       
       normWeight = N;
       categories = iCat;
       if (N > 1e-10 && mgg > 1000 && mgg < 5000) TCVARS->Fill();
     }
   }
   
   TCVARS->Write();
   f1->Close();
   
     
 }

 file0.Close();

}


